name: Build

on:
  push:
    branches: [ master ]

jobs:

  build:
    name: Code generate
    runs-on: ubuntu-latest
    steps:

    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '15'
        check-latest: true

    - name: Check out web core
      uses: actions/checkout@v2
      with:
        path: web
        repository: elements-platform/web

    - name: Check out elements-platform.github.io
      uses: actions/checkout@v2
      with:
        ssh-key: ${{ secrets.GH_DEPLOY_KEY }}
        path: elements-platform.github.io
        repository: elements-platform/elements-platform.github.io

    - name: Cleanup existing build artifacts
      run: |
        cd "$GITHUB_WORKSPACE/elements-platform.github.io"
        mv .git ..
        rm -rf ./* .*
        mv ../.git .

    - name: Get dependencies
      run: |
        cd "$GITHUB_WORKSPACE/web"
        yarn

    - name: Generate production code
      run: |
        cd "$GITHUB_WORKSPACE/web"
        yarn build --outDir "$GITHUB_WORKSPACE/elements-platform.github.io"

    - name: Get target SHA
      id: target-sha
      run: |
        cd "$GITHUB_WORKSPACE/web"
        echo "::set-output name=result::$(git rev-parse --short HEAD)"

    - name: Upload to repository
      id: upload
      env:
        DEPLOY_KEY: ${{ secrets.GH_DEPLOY_KEY }}
      run: |
        cd "$GITHUB_WORKSPACE/elements-platform.github.io"
        git add .
        git commit --allow-empty -m "Build elements-platform/web@${{ steps.target-sha.outputs.result }}"
        git push

    - name: Send notify to Telegam
      uses: KaMeHb-UA/telegram-ci-notify-action@v4
      if: ${{ always() }}
      with:
        status: ${{ steps.upload.outcome }}
        bot-token: ${{ secrets.TG_BOT_TOKEN }}
        chat-id: ${{ secrets.TG_LOG_CHAT }}
        container-name: https://elements-platform.github.io
        container-link: https://elements-platform.github.io
        skip-is-fail: true
